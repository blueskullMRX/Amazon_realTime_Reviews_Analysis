version: '3.7'

services:
  backend:
    build:
      context: ./backend
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - smack-net

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - smack-net


  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    networks:
      - smack-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    depends_on:
      - zookeeper
    networks:
      - smack-net
    
  kafka2:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9093,PLAINTEXT_INTERNAL://kafka2:29093
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    depends_on:
      - zookeeper
    networks:
      - smack-net

  spark-master:
    build:
      context: ./spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - smack-net
    volumes:
      - spark-logs:/opt/bitnami/spark/logs
      - ./spark-master/model:/review/models
  spark-worker-1:
    build:
      context: ./spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    networks:
      - smack-net
    volumes:
      - ./spark-master/model:/review/models

    

  
  spark-worker-2:
    build:
      context: ./spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    networks:
      - smack-net
    volumes:
      - ./spark-master/model:/review/models
    

  spark-worker-3:
    build:
      context: ./spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    networks:
      - smack-net
    volumes:
      - ./spark-master/model:/review/models
    

  kafka-producer:
    build:
      context: ./kafka-producer
    depends_on:
      - kafka
    networks:
      - smack-net

  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - smack-net
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      
networks:
  smack-net:

volumes:
  spark-logs:
